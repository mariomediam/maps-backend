# Generated by Django 5.2.5 on 2025-08-19 19:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IncidentCategory',
            fields=[
                ('id_category', models.AutoField(db_column='id_category', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='description', max_length=200, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Incident Category',
                'verbose_name_plural': 'Incident Categories',
                'db_table': 'incident_category',
            },
        ),
        migrations.CreateModel(
            name='IncidentClosureType',
            fields=[
                ('id_closure_type', models.AutoField(db_column='id_closure_type', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='description', max_length=200, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Incident Closure Type',
                'verbose_name_plural': 'Incident Closure Types',
                'db_table': 'incident_closure_type',
            },
        ),
        migrations.CreateModel(
            name='IncidentPriority',
            fields=[
                ('id_priority', models.AutoField(db_column='id_priority', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='description', max_length=100, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Incident Priority',
                'verbose_name_plural': 'Incident Priorities',
                'db_table': 'incident_priority',
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id_incident', models.AutoField(db_column='id_incident', primary_key=True, serialize=False)),
                ('registration_date', models.DateTimeField(auto_now_add=True, db_column='registration_date', verbose_name='Registration Date')),
                ('latitude', models.DecimalField(db_column='latitude', decimal_places=8, max_digits=10, verbose_name='Latitude')),
                ('longitude', models.DecimalField(db_column='longitude', decimal_places=8, max_digits=11, verbose_name='Longitude')),
                ('summary', models.TextField(db_column='summary', verbose_name='Incident Summary')),
                ('reference', models.CharField(blank=True, db_column='reference', help_text='Example: Corner of Av. Junín with Av. Sánchez Cerro', max_length=500, verbose_name='Reference')),
                ('show_on_map', models.BooleanField(db_column='show_on_map', default=False, help_text='If the incident will be visible to other citizens', verbose_name='Show on Map')),
                ('user_type', models.CharField(choices=[('1', 'Inspector'), ('2', 'Citizen')], db_column='user_type', max_length=20, verbose_name='User Type')),
                ('is_closed', models.BooleanField(db_column='is_closed', default=False, verbose_name='Incident Closed')),
                ('citizen_name', models.CharField(blank=True, db_column='citizen_name', max_length=100, null=True, verbose_name='Citizen Name')),
                ('citizen_lastname', models.CharField(blank=True, db_column='citizen_lastname', max_length=100, null=True, verbose_name='Citizen Lastname')),
                ('citizen_phone', models.CharField(blank=True, db_column='citizen_phone', max_length=20, null=True, verbose_name='Citizen Phone')),
                ('citizen_email', models.EmailField(blank=True, db_column='citizen_email', max_length=254, null=True, verbose_name='Citizen Email')),
                ('derivation_document', models.CharField(blank=True, db_column='derivation_document', help_text='Document code with which the incident was referred', max_length=8, null=True, verbose_name='Derivation Document')),
                ('closure_description', models.TextField(blank=True, db_column='closure_description', null=True, verbose_name='Closure Description')),
                ('closure_date', models.DateTimeField(blank=True, db_column='closure_date', null=True, verbose_name='Closure Date')),
                ('closure_user', models.ForeignKey(blank=True, db_column='closure_user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_incidents', to=settings.AUTH_USER_MODEL, verbose_name='Closure User')),
                ('inspector', models.ForeignKey(blank=True, db_column='inspector_id', help_text='Inspector user who registered the incident', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Inspector')),
                ('category', models.ForeignKey(db_column='id_category', on_delete=django.db.models.deletion.PROTECT, to='app_maps.incidentcategory', verbose_name='Category')),
                ('closure_type', models.ForeignKey(blank=True, db_column='id_closure_type', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_maps.incidentclosuretype', verbose_name='Closure Type')),
                ('priority', models.ForeignKey(blank=True, db_column='id_priority', null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_maps.incidentpriority', verbose_name='Priority')),
            ],
            options={
                'verbose_name': 'Incident',
                'verbose_name_plural': 'Incidents',
                'db_table': 'incident',
                'ordering': ['-registration_date'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id_attachment', models.AutoField(db_column='id_attachment', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='description', help_text='Description of the file content', max_length=300, verbose_name='File Description')),
                ('url', models.URLField(db_column='url', help_text='URL from where the file can be downloaded', max_length=500, verbose_name='File URL')),
                ('upload_date', models.DateTimeField(auto_now_add=True, db_column='upload_date', verbose_name='Upload Date')),
                ('upload_user', models.ForeignKey(blank=True, db_column='upload_user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Upload User')),
                ('incident', models.ForeignKey(db_column='id_incident', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='app_maps.incident', verbose_name='Incident')),
            ],
            options={
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
                'db_table': 'attachment',
                'ordering': ['upload_date'],
            },
        ),
        migrations.CreateModel(
            name='Photography',
            fields=[
                ('id_photography', models.AutoField(db_column='id_photography', primary_key=True, serialize=False)),
                ('url', models.URLField(db_column='url', help_text='URL from where the photograph can be downloaded', max_length=500, verbose_name='Photography URL')),
                ('upload_date', models.DateTimeField(auto_now_add=True, db_column='upload_date', verbose_name='Upload Date')),
                ('incident', models.ForeignKey(db_column='id_incident', on_delete=django.db.models.deletion.CASCADE, related_name='photographs', to='app_maps.incident', verbose_name='Incident')),
            ],
            options={
                'verbose_name': 'Photography',
                'verbose_name_plural': 'Photographs',
                'db_table': 'photography',
                'ordering': ['upload_date'],
            },
        ),
    ]
